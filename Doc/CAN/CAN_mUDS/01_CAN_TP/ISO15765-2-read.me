-----------------------------------------------------------------------------------------
Основные сведения о блоке ECU 
-----------------------------------------------------------------------------------------
Physical и Data		соответствуют ISO 11898-1 и 11898-2
Network и Transport	соответствуют ISO 15765-2 и 15765-4 2011 RUS|
OBD 				соответствует ISO15031-5 2015
UDS 				соответствует ISO14229-1 2013
-----------------------------------------------------------------------------------------
CAN ID			- 11-bit.
CAN DLC			- фиксированная 8 байт(независимо от содержимого в сообщении)
Порядок байт	- Motorola (big-endian).
CAN Baudrate 	- 500 kbit/s
-----------------------------------------------------------------------------------------
Поддерживаемые форматы адресации - normal
Типы адресации для normal:
	1) физическая 
		ECU принимает сообщения от CAN ID 0x781.
		ECU отправляет сообщения на CAN ID 0x791.
		
	2) функциональная
		ECU принимает сообщение от CAN ID 0x7DF.
		ECU отправляет сообщение на CAN ID 0x791.
		Поддерживается во всех диагностических сессиях. //TODO Надо запретить!!!

Block size 		- 255
ST таймер 		- 1 
WTF max			- 5
Padding value	- 0x00 

AS таймаут 		- 25
BS таймаут 		- 250
CS таймаут 		- 10
AR таймаут 		- 25
BR таймаут		- 25
CR таймаут 		- 2500



-----------------------------------------------------------------------------------------
// ISO15765-2 краткое описание
-----------------------------------------------------------------------------------------

Несегментированные сообщения - передача сообщения возможна посредством передачи одного сообщения на канальном уровне
Cегментированные сообщения - передача более длинных сообщений выполняется путем сегментации на более мелкие части, каждая часть передается по сети и собирается на стороне приемника.

Более подробное описание ниже. Самое подробное в ISO 15765-2 2016. 
-----------------------------------------------------------------------------------------
------
N_PDU - network_protocol data unit ( https://en.wikipedia.org/wiki/Protocol_data_unit )
------

Позволяет передавать данные от одного сетевого уровня к другому (или другим)
Состоит из трех полей: 
N_AI   - network_address information - используется для идентификации подключенных сетевых уровней (содержит адресную информацию, которая идентифицирует тип обмена сообщениями, получателя (получателей) и отправителя, между которыми происходит обмен данными), 

N_PCI  -  network_protocol control information - В нём указывается тип N_PDU(типы описаны ниже),

N_Data - в N_PDU используется для передачи пользовательских данных. Eсли необходимо, сегментируется на более мелкие части. каждый сегмент помещается в поле данных N_PDU до их передачи по сети. Количество N_Data зависит от типа N_PDU, значения длины сообщения и выбранного формата адреса.

------
N_SDU - network_service data unit ( https://en.wikipedia.org/wiki/Service_data_unit )
------

-----------------------------------------------------------------------------------------
------
Форматы адресации

------
Normal
------

Используется для 11-битного CAN frame'а. 
Cоответствие между N_AI и идентификатором CAN - не установлено.
N_PCI и N_Data размещаются в поле данных CAN frame’а 

------
Normal fixed
------

Используется для 29-битного CAN frame'а. 
Подформат normal addressing, в котором дополнительно сопоставляется N_AI с идентификатором CAN.
Таблица 26 и Таблица 27 в ISO 15765-2 2016 определяют соответствие адресной информации (N_AI) с идентификатором CAN в зависимости от типа адресации(N_TAtype). N_PCI и N_Data размещаются в поле данных CAN frame’а.

------
Extended
------

Таблица 28 в ISO 15765-2 2016 устанавливает соответствие параметров N_PDU и CAN-frame’а для физического типа адресации.
Таблица 29 в ISO 15765-2 2016 устанавливает соответствие параметров N_PDU и CAN-frame’а для функционального типа адресации.

------
Mixed
------

29-битный идентификатор CAN
Смешанная адресация - это формат адресации, который будет использоваться, если Mtype=«удаленная диагностика».
Таблица 30 и Таблица 31 устанавливает соответствие между адресной информацией (N_AI) и 29-битном CAN-идентификаторе и первым байтом данных CAN-frame’а в зависимости от типа адресации(N_TAtype). N_PCI и N_Data размещаются в остальных байтах поля данных CAN-frame’а.


11-битный идентификатор CAN
Смешанная адресация - это формат адресации, который будет использоваться, если Mtype=«удаленная диагностика».
Табл. 32 и табл. 33 устанавливает соответствие между адресной информацией (N_AI) и 11-битным CAN-идентификатором. Для каждой комбинации N_SA, N_TA и N_TAtype может использоваться один и тот же CAN-идентификатор. N_AE размещается в первом байте поля данных CAN-frame’а. N_PCI и N_Data размещаются в остальных байтах поля данных CAN-frame’а.

-----------------------------------------------------------------------------------------
------
Типы адресации

------
Physical
------

Используется для передачи сообщений между диагностическим оборудованием и определенным ECU (т.е. используя уникальный CAN ID блока ECU). 
Рекомендованные CAN ID описаны на странице 24, ISO 15765-4 2011 RUS.

------
Functional
------

Используется для передачи всем подключенным ECU. Только одиночные сообщения

-----------------------------------------------------------------------------------------
------
Типы N_PDU 
------
Связь между сетевыми уровнями нескольких узлов осуществляется посредством обмена N_PDU.

В ISO 15765 указаны четыре различных типа PDU: 
	SingleFrame (SF N_PDU): 		N_PCI = 0, 
	FirstFrame (FF N_PDU): 			N_PCI = 1, 
	ConsecutiveFrame (CF N_PDU): 	N_PCI = 3,
	FlowControl (FC N_PDU): 		N_PCI = 2, 
которые используются сетевыми уровнями для установки связи, обмена параметрами связи, передачи пользовательских данных и для освобождения коммуникационных ресурсов.

------
SF N_PDU - single frame
------
SF N_PDU идентифицируется PCI SingleFrame (SF N_PCI). Может быть принят одним или несколькими узлами сети. Используется сетевым уровнем, если SDU может быть передан с помощью одной передачи на канальном уровне, несегментированным сообщением. 
____________________________________________________________________________
| Byte0				| Byte1 | Byte2 | Byte3 | Byte4 | Byte5 | Byte6 | Byte7 |
| bits7-4 | bits3-0 |_______|_______|_______|_______|_______|_______|_______|

| N_PCI   |Data_len | Data0 | Data1 | Data2 | Data3 | Data4 | Data5 | Data6 |

N_PCI = 0
Data_len = от 0 до 7 для CAN

------
FF N_PDU
------
FF N_PDU идентифицируется PCI FirstFrame (FF N_PCI). FF N_PDU должен быть принят уникальным, на время передачи сегментированного сообщения, сетевым узлом. Первое сообщение в сегментированном сообщении. Приемник начинает сборку сегментированного сообщения при получении FF N_PDU.

____________________________________________________________________________
| Byte0				| Byte1 | Byte2 | Byte3 | Byte4 | Byte5 | Byte6 | Byte7 |
| bits7-4 | bits3-0 |_______|_______|_______|_______|_______|_______|_______|

| N_PCI   |     Data_len	| Data1 | Data2 | Data3 | Data4 | Data5 | Data6 |

N_PCI = 1
Data_len = не больше 0xFFF(12 бит) - длина всего сегментированного сообщения для CAN

------
CF N_PDU
------
CF N_PDU идентифицируется PCI ConsecutiveFrame (CF N_PCI). 
CF N_PDU передает сегменты N_SDU.

Все N_PDU, переданные сетевым узлом после FF N_PDU, называются CF N_PDU. Принимающий сетевой узел должен передать собранное сегментированное сообщение на уровень выше после получения последнего CF N_PDU. CF N_PDU должен быть принят уникальным, на время передачи сегментированного сообщения, сетевым узлом.

____________________________________________________________________________
| Byte0				| Byte1 | Byte2 | Byte3 | Byte4 | Byte5 | Byte6 | Byte7 |
| bits7-4 | bits3-0 |_______|_______|_______|_______|_______|_______|_______|

| N_PCI   |seq_numb | Data0 | Data1 | Data2 | Data3 | Data4 | Data5 | Data6 |

N_PCI = 3
seq_numb - sequence number - установлен в единицу('1') после FF N_PDU. В следующем сообщении ожидается seq_numb, увеличенный на единицу. При достижении 15 - устанавливается в 0 (длина 4 бита, макс значение 15). 


------
FC N_PDU
------
FC N_PDU идентифицируется PCI FlowControl (FC N_PCI). FC N_PDU дает передающему узлу команду сети на запуск, остановку или возобновление передачи CF N_PDU. Он должен быть отправлен принимающим сетевым узлом отправляющему сетевому узлу, когда он (принимающий узел) будет готов принять больше данных, после правильного приема: 
a) FF N_PDU 
b) последнего CF N_PDU в блоке, если дальше необходимо отправлять ConsecutiveFrame’ы.

FC N_PDU также может информировать передающий сетевой уровень о приостановке передачи CF N_PDU во время сегментированной передачи сообщения или отмене передачи сегментированного сообщения, если информация о длине (FF_DL) в FF N_PDU, переданная отправляющим сетевым уровнем, превышает размер буфера приемника.

__________________________________________________________________________________
| Byte0				   | Byte1    | Byte2 | Byte3 | Byte4 | Byte5 | Byte6 | Byte7 |
|_bits7-4_|_bits3-0____|__________|_______|_______|_______|_______|_______|_______|

| N_PCI   | flow status|Block size| STMin | Data2 | Data3 | Data4 | Data5 | Data6 |

N_PCI = 2
С помощью FlowControl N_PDU, приемник может разрешить дальнейшую передачу ConsecutiveFrame N_PDU, задержать передачу или отказать в получении сегментированного сообщения в случае, когда количество передаваемых байтов превышает количество байтов, которое может быть сохранено в буфере приемника:
a) FC.CTS(continue to send), разрешение на продолжение передачи;
b) FC.WAIT: просьба продолжать ждать;
c) FC.OVFLW: переполнение буфера, указание того, что количество байтов, указанных в FirstFrame‘е сегментированного сообщения, превышает количество байтов, которые могут быть сохранены в буфере приемника.

Максимальное количество FC.WAIT, приемник хранит  в параметре N_WFTmax. Этот параметр является константой, заложенной при проектировании системы и не передается во FlowControl N_PDU.

flow status - 
a) FC.CTS(continue to send), разрешение на продолжение передачи;
b) FC.WAIT: просьба продолжать ждать;
c) FC.OVFLW: переполнение буфера, указание того, что количество байтов, указанных в FirstFrame‘е сегментированного сообщения, превышает количество байтов, которые могут быть сохранены в буфере приемника.

BlockSize - максимальное количество N_PDU, которое приемник позволяет передатчику отправлять до ожидания авторизации на продолжение передачи следующих N_PDU (проще говоря,количество ConsecutiveFrame между двумя FlowControl). Когда BlockSize приемника равен нулю, передатчик не ждет авторизации на продолжение передачи(FlowControl).

STmin - минимальное время, которое передатчик должен ждать между отправкой двух CF N_PDU

---------------------------------------------------------------------------
Параметры таймаутов 

AS - A sender 	- Время передачи CAN-frame’а (любой N_PDU) на стороне отправителя
AR - A receiver - Время передачи CAN-frame’а (любой N_PDU) на стороне получателя
BS - B sender 	- Время до приема FlowControl N_PDU
BR - B receiver - Время до передачи FlowControl N_PDU
CS - C sender 	- Время до передачи ConsecutiveFrame  N_PDU
CR - C receiver - Время до приема ConsecutiveFrame  N_PDU

---------------------------------------------------------------------------

------
Несегментированные сообщения:
------
Передача сообщений выполняется посредством передачи одного сообщения(N_PDU SF)

TESTER      ECU
|     SF    |
|\	        |
| \         |
|  \        |
|   \       |
|    \      |	|
|     \     |	|Time
|      \    |	|
|       \   |	V
|        \  |
|         \ |
|          \|

|     SF    |
|          /|
|         / |
|        /  |
|       /   |
|      /    |
|     /     |
|    /      |
|   /       |
|  /        |
| /         |
|/          |



------
Cегментированные сообщения:
------
Передача более длинных сообщений выполняется путем сегментации и передачи нескольких N_PDU. Прием более длинных сообщений выполняется путем приема нескольких N_PDU и его повторной сборки: Для первого сообщения N_PDU называется FirstFrame, для всех следующих - ConsecutiveFrame.

Приемник сегментированного сообщения может адаптировать пропускную способность передатчика к своим возможностям с помощью механизма FlowControl (используя PDU FlowControl’а (FC N_PDU).

Сообщения, длина которых больше длины single frame сегментируются на:
	- FirstFrame PDU (FF N_PDU), содержащий первый набор байтов данных
	- один или несколько ConsecutiveFrame PDU (CF N_PDU), каждый из которых содержит последовательные наборы (сегменты) байт данных. Последний (или единственный) CF N_PDU содержит последний набор (пакет) байт данных.

Длина сегментированного сообщения передается в FirstFrame. Все ConsecutiveFrame пронумерованы передатчиком, чтобы помочь приемнику собрать их в том же порядке.

Механизм FlowControl позволяет приемнику информировать передатчик о своих возможностях, которым он (передатчик) должен соответствовать.

Эти возможности определены следующим образом.
a) BlockSize (BS): максимальное количество N_PDU, которое приемник позволяет передатчику отправлять до ожидания авторизации на продолжение передачи следующих N_PDU. Когда BS приемника равен нулю, передатчик не ждет авторизации на продолжение передачи.
b) SeparationTime (STmin): минимальное время, которое передатчик должен ждать между отправкой двух CF N_PDU.

Поскольку значения BS и STmin присутствуют в каждом принятом кадре FlowControl, приемник сегментированного сообщения может выбирать между двумя режимами:
- dynamic: BS и STmin обновляются в каждом последующем PDU для этого сообщения;
- static: используются константы BS и STmin.

Все блоки, кроме последнего, будут содержать BS N_PDU. Последний будет содержать оставшиеся N_PDU (от 1 до BS).

Каждый раз, когда передатчик / приемник ожидает N_PDU от приемника / передатчика, механизм тайм-аута позволяет обнаружить ошибку передачи.

С помощью FlowControl N_PDU, приемник может разрешить дальнейшую передачу ConsecutiveFrame N_PDU, задержать передачу или отказать в получении сегментированного сообщения в случае, когда количество передаваемых байтов превышает количество байтов, которое может быть сохранено в буфере приемника:
a) FC.CTS(continue to send), разрешение на продолжение передачи;
b) FC.WAIT: просьба продолжать ждать;
c) FC.OVFLW: переполнение буфера, указание того, что количество байтов, указанных в FirstFrame‘е сегментированного сообщения, превышает количество байтов, которые могут быть сохранены в буфере приемника.

Максимальное количество FC.WAIT, приемник хранит  в параметре N_WFTmax. Этот параметр является константой, заложенной при проектировании системы и не передается во FlowControl N_PDU.

На рисунке показана сегментация на стороне передатчика и повторная сборка на стороне приемника.

TESTER      ECU
|     SF    |
|\	        |
| \         |
|  \        |
|   \       |
|    \      |	|
|     \     |	|Time
|      \    |	|
|       \   |	V
|        \  |
|         \ |
|          \|

|     FF    |
|          /|
|         / |
|        /  |
|       /   |
|      /    |
|     /     |
|    /      |
|   /       |
|  /        |
| /         |
|/          |

|    FC     |
|\	        |
| \         |
|  \        |
|   \       |
|    \      |
|     \     |
|      \    |
|       \   |
|        \  |
|         \ |
|          \|

|     CF    |
|          /|
|         / |
|        /  |
|       /   |
|      /    |
|     /     |
|    /      |
|   /       |
|  /        |
| /         |
|/          |

|    CF     |
|          /|
|         / |
|        /  |
|       /   |
|      /    |
|     /     |
|    /      |
|   /       |
|  /        |
| /         |
|/          |

|    FC     |
|\	        |
| \         |
|  \        |
|   \       |
|    \      |
|     \     |
|      \    |
|       \   |
|        \  |
|         \ |
|          \|

|    CF     |
|          /|
|         / |
|        /  |
|       /   |
|      /    |
|     /     |
|    /      |
|   /       |
|  /        |
| /         |
|/          |





-----------------------------------------------------------------------------------------
------
Обработка ошибок
------
Все ошибки описаны в ISO 15765-2
Буду дополнять этот раздел по настроению.

Если сетевой уровень обнаруживает какой-либо тип ошибки в FF, тогда сообщение должно игнорироваться, примитив N_USData_FF.indication не должен передаваться соседнему верхнему уровню.
Если сетевой уровень получает FF с количеством данных (FF_DL), большим, чем размер доступного буфера приемника, то это условие должно рассматриваться как ошибка, примитив N_USData_FF.indication не должен передаваться соседнему верхнему уровню.

Если сетевой уровень обнаруживает какой-либо тип ошибки в SF, тогда сообщение должно игнорироваться сетевым уровнем, примитив N_USData.indication не должен передаваться соседнему верхнему уровню..



8.3.7 <N_Result>
Тип: перечисление
Возможные значения: N_OK, N_TIMEOUT_A, N_TIMEOUT_Bs, N_TIMEOUT_Cr, N_WRONG_SN, N_INVALID_FS, N_UNEXP_PDU, N_WFT_OVRN, N_BUFFER_OVFLW, N_ERROR

Описание: Этот параметр содержит результат выполнения сервиса. Если одновременно обнаруживаются две или более ошибки, тогда сетевой уровень (???network layer entity) при передаче ошибки на уровень выше, должен использовать значение параметра, найденное первым в этом списке.

- N_OK
Выполнение службы завершено успешно; он может быть выдан пользователю службы на стороне отправителя и получателя.

- N_TIMEOUT_A
Таймер N_Ar / N_As достиг значения N_Asmax / N_Armax; результат передатчика или приемника.
- N_TIMEOUT_Bs
Таймер N_Bs достиг значения N_Bsmax; результат передатчика.

- N_TIMEOUT_Cr
Таймер N_Cr достиг значения N_Crmax; результат приемника.

- N_WRONG_SN
Получения неправильного SequenceNumber (PCI.SN); результат приемника.

- N_INVALID_FS
В FlowControl (FC) N_PDU получен недопустимый или неизвестный статус FlowStatus; результат передатчика.

- N_UNEXP_PDU
Получен непредвиденный N_PDU; результат приемника.

- N_WFT_OVRN
Передатчик отослал <N_WFTmax> раз (например 10 раз) FlowControl с FlowStatus = WAIT подряд; результат приемника.

- N_BUFFER_OVFLW
После получения N_PDU FlowControl (FC) с FlowStatus = OVFLW. Он указывает, что буфер на стороне приемника сегментированной передачи сообщений не может сохранить количество байтов, заданных параметром FirstFrame DataLength (FF_DL) в FirstFrame, и поэтому передача сегментированного сообщения была прервана; результат передатчика.

- N_ERROR
Никакое другое значение параметра не может использоваться для лучшего описания ошибки; результат передатчика или приемника.




9.6.5.5 Обработка ошибок SeparationTime (STmin)
Если сообщение FC N_PDU получено с недопустимым (зарезервированным) значением параметра STmin, то передающий сетевой узел должен использовать самое длинное значение STmin, указанное в этой части ISO 15765 (0x7F = 127 мс) вместо значения, полученного от принимающего сетевого узла на протяжении всей передачи сегментированного сообщения.

Если время между двумя CF сегментированных данных (N_As + N_Cs) меньше значения, заданного приемником через STmin, нет гарантии, что приемник данных будет правильно принимать и обрабатывать все кадры. В любом случае приемник сегментированных данных не должен следить за соблюдением значения STmin.


-----------------------------------------------------------------------------------------














-------------------------------------------------------

|           |
|          /|
|         / |
|        /  |
|       /   |
|      /    |
|     /     |
|    /      |
|   /       |
|  /        |
| /         |
|/          |

 
|           |
|\	        |
| \         |
|  \        |
|   \       |
|    \      |
|     \     |
|      \    |
|       \   |
|        \  |
|         \ |
|          \|
